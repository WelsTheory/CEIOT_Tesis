services:
  ionic-ui:
    build:
      context: ./src/frontend/dam
      dockerfile: Dockerfile
    ports:
      - "8100:8100"
    container_name: ionic-ui
    environment:
      - NODE_ENV=production
    restart: unless-stopped
    networks:
      - app-fullstack-net

  mysql-server:
    image: mysql:5.7
    hostname: mysql-server
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-userpass}
      MYSQL_DATABASE: ABS
    container_name: mysql-server
    volumes:
      - ./db/dumps:/docker-entrypoint-initdb.d
      - mysql-data:/var/lib/mysql
    networks:
      - app-fullstack-net
    ports:
      - "3306:3306"
    restart: unless-stopped

  mysql-admin:
    image: phpmyadmin/phpmyadmin
    environment: 
      PMA_HOST: mysql-server
      PMA_PORT: 3306
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-userpass}
    container_name: mysql-admin
    networks:
      - app-fullstack-net
    depends_on:
      - mysql-server
    ports:
      - "8001:80"
    restart: unless-stopped

  mosquitto:
    image: eclipse-mosquitto:2.0
    container_name: mosquitto
    networks:
      - app-fullstack-net
    ports:
      - "1883:1883"
      - "8883:8883"
      - "9001:9001"
      - "8884:8884"
    volumes:
      - ./mqtt/config/mosquitto.conf:/mosquitto/config/mosquitto.conf:ro
      - ./mqtt/config/passwd:/mosquitto/config/passwd:ro
      - ./mqtt/certs:/mosquitto/config/certs:ro
      - mosquitto-data:/mosquitto/data
      - mosquitto-log:/mosquitto/log
    restart: unless-stopped
    command: mosquitto -c /mosquitto/config/mosquitto.conf

  node-backend:
    build:
      context: ./src/backend
      dockerfile: Dockerfile
    container_name: node-backend
    environment:
      - NODE_ENV=production
      - DB_HOST=mysql-server
      - MQTT_HOST=mosquitto
      - MQTT_PORT=1883  # Internamente usa sin cifrar (red Docker es segura)
    volumes:
      - ./src/backend:/src/backend
      - /src/backend/node_modules
    networks:
      - app-fullstack-net
    depends_on:
      - mysql-server
      - mosquitto
    ports:
      - "8000:3000"
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - app-fullstack-net
    depends_on:
      - ionic-ui
      - node-backend
      - mosquitto
    restart: unless-stopped

networks:
  app-fullstack-net:
    driver: bridge

volumes:
  mysql-data:
  mosquitto-data:
  mosquitto-log: