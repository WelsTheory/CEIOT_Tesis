services:

    ionic-ui:
      build:
        context:                ./src/frontend/dam
        dockerfile:             Dockerfile
      ports:
        -                       "8100:8100"
      container_name:           ionic-ui
      volumes:
         -                      ./src/frontend/dam:/src/frontend/dam
         -                      /src/frontend/dam/node_modules
      command:                  ionic serve --external
      networks:
        -                       app-fullstack-net

    mysql-server:
        image:                   mysql:5.7
        hostname:                mysql-server
        environment:
            MYSQL_ROOT_PASSWORD: userpass
        container_name:          mysql-server
        volumes:
            -                    ./db/dumps:/docker-entrypoint-initdb.d
            -                    ./db/data:/var/lib/mysql
        networks:
            -                    app-fullstack-net
        ports:
            -                    "3306:3306"
        healthcheck:
            test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-puserpass"]
            interval: 10s
            timeout: 5s
            retries: 5

    mysql-admin:
        image:                   phpmyadmin/phpmyadmin
        environment: 
            PMA_HOST:            mysql-server
            PMA_PORT:            3306
            MYSQL_ROOT_PASSWORD: userpass
        container_name:          mysql-admin
        networks:
            -                    app-fullstack-net
        depends_on:
            mysql-server:
                condition:       service_healthy
        ports:
            -                    "8001:80"

# ====== NUEVO SERVICIO MQTT ======
    mosquitto:
        image:                   eclipse-mosquitto:2.0
        container_name:          mosquitto
        networks:
            -                    app-fullstack-net
        ports:
            -                    "1883:1883"   # Puerto MQTT estÃ¡ndar
            -                    "9001:9001"   # Puerto WebSocket para frontend
        volumes:
            -                    ./mqtt/config/mosquitto.conf:/mosquitto/config/mosquitto.conf:ro
            -                    ./mqtt/data:/mosquitto/data
            -                    ./mqtt/log:/mosquitto/log
        restart:                 unless-stopped
        command: mosquitto -c /mosquitto/config/mosquitto.conf

    #node-backend:
    #    build:
    #        context:                  ./src/backend
    #        dockerfile:                 Dockerfile
    #    container_name: node-backend
    #    volumes:
    #    - ./src/backend:/src/backend
    #    networks:
    #    - app-fullstack-net
    #    depends_on:
    #    - mysql-server
    #    - mosquitto
    #    ports:
    #    - "8000:3000"
    #    command: >
    #        sh -c "npm install && nodemon -L index.js"

    # ====== BACKEND DJANGO (NUEVO) ======
    django-backend:
        build:
            context:                  ./src/backend_django
            dockerfile:               Dockerfile
        container_name:               django-backend
        volumes:
            -                         ./src/backend_django:/app
        networks:
            -                         app-fullstack-net
        depends_on:
            mysql-server:
                condition:            service_healthy
            mosquitto:
                condition:            service_started
        ports:
            -                         "8000:8000"
        environment:
            - DEBUG=True
            - DB_HOST=mysql-server
            - DB_PORT=3306
            - DB_NAME=ABS
            - DB_USER=root
            - DB_PASSWORD=userpass
            - MQTT_BROKER_HOST=mosquitto
            - MQTT_BROKER_PORT=1883
        restart:                      unless-stopped

networks:
    app-fullstack-net:
        driver:                  bridge
